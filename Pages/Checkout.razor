@* @page "/checkout"
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@implements IDisposable

<div class="main">
 <EditForm EditContext=editContext OnValidSubmit=PlaceOrder>

protected void ShowError()
{
    isError = true;
}
<DataAnnotationsValidator />
  </EditForm>

</div>

        <div class="checkout-order-details">
            <h4>Review order</h4>
            <OrderReview Order="Order" />

</div>
       

       <div class="checkout-delivery-address">
  <h4>Deliver to...</h4>
  @if (isError) {
    <div class="alert alert-danger">Please enter a name and address.</div>
  }
  <AddressEditor Address="Order.DeliveryAddress" />

</div>
  
<button class="checkout-button btn btn-warning" type="Submit" disabled=@isError>
 
</button>

@code {

async Task PlaceOrder()
{
  var response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "orders", OrderState.Order);
  var newOrderId= await response.Content.ReadFromJsonAsync<int>();
  OrderState.ResetOrder();
  NavigationManager.NavigateTo($"myorders/{newOrderId}");
}
} *@


